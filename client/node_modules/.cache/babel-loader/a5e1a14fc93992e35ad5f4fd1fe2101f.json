{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/home/ubuntu/music_upload/client/src/App.js\";\nimport React from 'react';\nimport axios from 'axios';\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\nimport './App.css';\n\nclass AddAlbum extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      name: \"\",\n      artist: \"\",\n      genre: 0,\n      nation: \"\",\n      year: 0,\n      volume: 0,\n      rating: 0.0\n    };\n    this.handleValueChange = this.handleValueChange.bind(this);\n  }\n\n  handleValueChange(e) {\n    let nextState = {};\n    nextState[e.target.name] = e.target.value;\n    this.setState(nextState);\n  }\n\n  addAlbum() {\n    const {\n      name,\n      artist,\n      genre,\n      nation,\n      year,\n      volume,\n      rating\n    } = this.state;\n    const url = 'http://moonmusic.duckdns.org:8081/api/customers';\n    const formData = new FormData();\n    formData.append('name', name);\n    formData.append('artist', artist);\n    formData.append('genre', genre);\n    formData.append('nation', nation);\n    formData.append('year', year);\n    formData.append('volume', volume);\n    formData.append('rating', rating);\n    const config = {\n      headers: {\n        'content-type': 'multipart/form-data'\n      }\n    };\n    return postMessage(url, formData, config);\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: this.handleFormSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Album UPLOAD\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: \"\\uC7A5\\uB974 [ 1:POP, 2:R&B/Soul, 3:Rock, 4:J-POP, 5:Ballad, 6:HipHop, 7:EDM, 8:Others ]\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), \"\\uC568\\uBC94\\uC774\\uB984 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"name\",\n        value: this.state.name,\n        onChange: this.handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 24\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 120\n      }, this), \"\\uC544\\uD2F0\\uC2A4\\uD2B8 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"artist\",\n        value: this.state.artist,\n        onChange: this.handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 24\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 124\n      }, this), \"\\uC7A5 \\uB974 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"genre\",\n        value: this.state.genre,\n        onChange: this.handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 23\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 121\n      }, this), \"\\uAD6D \\uAC00 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"nation\",\n        value: this.state.nation,\n        onChange: this.handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 23\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 123\n      }, this), \"\\uCD9C\\uC2DC\\uC5F0\\uB3C4 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"year\",\n        value: this.state.year,\n        onChange: this.handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 24\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 120\n      }, this), \"\\uBCFC \\uB968 : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"volume\",\n        value: this.state.volume,\n        onChange: this.handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 23\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 123\n      }, this), \"Rating : \", /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        name: \"rating\",\n        value: this.state.rating,\n        onChange: this.handleValueChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 26\n      }, this), \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 126\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"\\uC5C5\\uB85C\\uB4DC \\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass Album extends React.Component {\n  render() {\n    const {\n      id,\n      name,\n      artist\n    } = this.props;\n    const imgsrc = \"http://moonmusic.duckdns.org:3000/images/\" + id + \".jpg\";\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        children: id\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: imgsrc,\n          alt: name,\n          height: \"150\",\n          width: \"150\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 28\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nclass App extends React.Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      albums: []\n    };\n\n    this.getAlbums = async () => {\n      var url = \"http://moonmusic.duckdns.org:8081/api/albums\";\n      const albums = await axios.get(url);\n      this.setState({\n        albums: albums.data\n      });\n    };\n  }\n\n  componentDidMount() {\n    document.title = \"음평회 앨범 Upload Webpage\";\n    this.getAlbums();\n  }\n\n  render() {\n    const {\n      albums\n    } = this.state;\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"center\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"\\uB300\\uC911 \\uC74C\\uC545\\uC758 \\uC774\\uD574\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n          children: \"\\uC815\\uAE30 \\uC74C\\uD3C9\\uD68C UPLOAD WEBPAGE\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(AddAlbum, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 17\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"\\uC74C\\uD3C9\\uD68C \\uC21C\\uC11C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Album Cover\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Album Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n              children: \"Artist\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: albums.map(album => /*#__PURE__*/_jsxDEV(Album, {\n            id: album.id,\n            name: album.name,\n            artist: album.artist\n          }, album.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 29\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/home/ubuntu/music_upload/client/src/App.js"],"names":["React","axios","Table","TableHead","TableBody","TableRow","TableCell","AddAlbum","Component","constructor","props","state","name","artist","genre","nation","year","volume","rating","handleValueChange","bind","e","nextState","target","value","setState","addAlbum","url","formData","FormData","append","config","headers","postMessage","render","handleFormSubmit","Album","id","imgsrc","App","albums","getAlbums","get","data","componentDidMount","document","title","map","album"],"mappings":"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","sourcesContent":["import React from 'react';\nimport axios from 'axios';\n\nimport Table from '@material-ui/core/Table';\nimport TableHead from '@material-ui/core/TableHead'\nimport TableBody from '@material-ui/core/TableBody'\nimport TableRow from '@material-ui/core/TableRow';\nimport TableCell from '@material-ui/core/TableCell';\n\nimport './App.css';\n\nclass AddAlbum extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            name : \"\",\n            artist : \"\",\n            genre : 0,\n            nation : \"\",\n            year : 0,\n            volume : 0,\n            rating : 0.0\n        }\n        this.handleValueChange = this.handleValueChange.bind(this)\n    }\n\n    handleValueChange(e) {\n        let nextState = {};\n        nextState[e.target.name] = e.target.value;\n        this.setState(nextState);\n    }\n\n    addAlbum() {\n        const {name, artist, genre, nation, year, volume, rating} = this.state;\n        const url = 'http://moonmusic.duckdns.org:8081/api/customers';\n        const formData = new FormData();\n        formData.append('name', name);\n        formData.append('artist', artist);\n        formData.append('genre', genre);\n        formData.append('nation', nation);\n        formData.append('year', year);\n        formData.append('volume', volume);\n        formData.append('rating', rating);\n\n        const config = {\n            headers: {\n                'content-type' : 'multipart/form-data'\n            }\n        }\n\n        return postMessage(url, formData, config);\n    }\n\n    render() {\n        return (\n            <form onSubmit = {this.handleFormSubmit}>\n                <h2>Album UPLOAD</h2>\n                <h4>장르 [ 1:POP, 2:R&B/Soul, 3:Rock, 4:J-POP, 5:Ballad, 6:HipHop, 7:EDM, 8:Others ]</h4>\n                앨범이름 : <input type = \"text\" name=\"name\" value = {this.state.name} onChange={this.handleValueChange} /> <br/>\n                아티스트 : <input type = \"text\" name=\"artist\" value = {this.state.artist} onChange={this.handleValueChange} /> <br/>\n                장 르 : <input type = \"text\" name=\"genre\" value = {this.state.genre} onChange={this.handleValueChange} /> <br/>\n                국 가 : <input type = \"text\" name=\"nation\" value = {this.state.nation} onChange={this.handleValueChange} /> <br/>\n                출시연도 : <input type = \"text\" name=\"year\" value = {this.state.year} onChange={this.handleValueChange} /> <br/>\n                볼 륨 : <input type = \"text\" name=\"volume\" value = {this.state.volume} onChange={this.handleValueChange} /> <br/>\n                Rating : <input type = \"text\" name=\"rating\" value = {this.state.rating} onChange={this.handleValueChange} /> <br/>\n                <button type=\"submit\">업로드 하기</button>\n            </form>\n        );\n    }\n}\n\nclass Album extends React.Component {\n    render() {\n        const {id, name, artist} = this.props;\n        const imgsrc = \"http://moonmusic.duckdns.org:3000/images/\" + id + \".jpg\";\n\n        return (\n            <TableRow>\n                <TableCell>{id}</TableCell>\n                <TableCell><img src={imgsrc} alt={name} height=\"150\" width=\"150\"/></TableCell>\n                <TableCell>{name}</TableCell>\n                <TableCell>{artist}</TableCell>\n            </TableRow>\n        );\n    }\n}\n\nclass App extends React.Component {\n\n    state = {\n        albums: []\n    }\n\n    componentDidMount() {\n        document.title = \"음평회 앨범 Upload Webpage\"\n        this.getAlbums();\n    }\n\n    getAlbums = async () => {\n        var url = \"http://moonmusic.duckdns.org:8081/api/albums\";\n        const albums = await axios.get(url);\n        this.setState({albums:albums.data});\n    } \n\n    render() {\n        const {albums} = this.state;\n\n        return (\n            <div>\n                <center>\n                    <h1>\n                        대중 음악의 이해\n                    </h1>\n                    <h2>\n                        정기 음평회 UPLOAD WEBPAGE\n                    </h2>              \n                <AddAlbum/>\n                </center>\n                <Table>\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>음평회 순서</TableCell>\n                            <TableCell>Album Cover</TableCell>\n                            <TableCell>Album Name</TableCell>\n                            <TableCell>Artist</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {albums.map(album => (\n                            <Album \n                                key = {album.id}\n                                id = {album.id}\n                                name = {album.name}\n                                artist = {album.artist}\n                            />\n                        ))}\n                    </TableBody>\n                </Table>\n            </div>\n        );\n    }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}